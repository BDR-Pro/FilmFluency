# Generated by Django 4.2.7 on 2024-04-16 22:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('learning', '0008_rename_iso_code_language_tmdb_code_language_fb_code_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_level', models.IntegerField(default=1)),
                ('points', models.IntegerField(default=0)),
                ('paid_user', models.BooleanField(default=False)),
                ('highest_score', models.IntegerField(default=0)),
                ('joined_date', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('bookmarks', models.ManyToManyField(related_name='bookmarked_by', to='learning.post')),
                ('comments', models.ManyToManyField(related_name='commented_by', to='learning.comment')),
                ('community', models.ManyToManyField(related_name='community_of', to='learning.community')),
                ('dislikes', models.ManyToManyField(related_name='disliked_by', to='learning.post')),
                ('favourite_movies', models.ManyToManyField(related_name='favourite_of', to='learning.movie')),
                ('known_languages', models.ManyToManyField(related_name='known_by', to='learning.language')),
                ('likes', models.ManyToManyField(related_name='liked_by', to='learning.post')),
                ('notifications', models.ManyToManyField(related_name='notified_to', to='learning.notification')),
                ('posts', models.ManyToManyField(related_name='posted_by', to='learning.post')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('videos_watched', models.ManyToManyField(related_name='watched_by', to='learning.video')),
                ('watched_movies', models.ManyToManyField(related_name='watched_by', to='learning.movie')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(max_length=255)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('cover_picture', models.ImageField(blank=True, null=True, upload_to='cover_pictures/')),
                ('bio', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('favourite_languages', models.ManyToManyField(related_name='favourite_of', to='learning.language')),
                ('friends', models.ManyToManyField(to='users.userprofile')),
                ('language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='learning.language')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('video', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='learning.video')),
            ],
        ),
        migrations.CreateModel(
            name='LeaderboardEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0)),
                ('level', models.IntegerField(default=1)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-score'],
            },
        ),
    ]
