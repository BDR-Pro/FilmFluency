# Generated by Django 4.2.11 on 2024-04-23 12:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('learning', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField(default=1)),
                ('report', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('closed', models.BooleanField(default=False)),
                ('content_type', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_level', models.IntegerField(default=1)),
                ('points', models.IntegerField(default=0)),
                ('highest_score', models.IntegerField(default=0)),
                ('community', models.ManyToManyField(related_name='community_of', to='learning.community')),
                ('favourite_movies', models.ManyToManyField(related_name='favourite_of', to='learning.movie')),
                ('known_languages', models.ManyToManyField(related_name='known_by', to='learning.language')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('videos_watched', models.ManyToManyField(related_name='watched_by', to='learning.video')),
                ('watched_movies', models.ManyToManyField(related_name='watched_by', to='learning.movie')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(max_length=255)),
                ('profile_picture', models.ImageField(upload_to=users.models.upload_to)),
                ('cover_picture', models.ImageField(upload_to=users.models.upload_to)),
                ('bio', models.TextField(blank=True, null=True)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('joined_date', models.DateTimeField(auto_now_add=True)),
                ('paid_user', models.BooleanField(default=False)),
                ('bookmarks', models.ManyToManyField(related_name='bookmarked_by', to='learning.post')),
                ('comments', models.ManyToManyField(related_name='commented_by', to='learning.comment')),
                ('dislikes', models.ManyToManyField(related_name='disliked_by', to='learning.post')),
                ('favourite_languages', models.ManyToManyField(related_name='favourite_of', to='learning.language')),
                ('friends', models.ManyToManyField(to='users.userprofile')),
                ('language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='learning.language')),
                ('likes', models.ManyToManyField(related_name='liked_by', to='learning.post')),
                ('posts', models.ManyToManyField(related_name='posted_by', to='learning.post')),
                ('reports', models.ManyToManyField(related_name='reported_by', to='users.report')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LeaderboardEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0)),
                ('level', models.IntegerField(default=1)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-score'],
            },
        ),
    ]
